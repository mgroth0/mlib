// Generated by CoffeeScript 2.5.1
var inc_calcs, mplotly, plot_map;

plot_map = {};

mplotly = function(dv) {
  return dv.def({
    animate: function({data_changes, newXrange, newYrange, newAnnotations, dur, redraw}) {
      var d, data, duration, i, j, k, layout, len, len1, rd, ref, update;
      log('setting up animation');
      duration = 500;
      if (dur != null) {
        duration = dur;
      }
      rd = true;
      if (redraw != null) {
        rd = redraw;
      }
      if ((data_changes != null) && ((data_changes.length > 0) != null)) {
        data = [];
        ref = this._fullData;
        for (j = 0, len = ref.length; j < len; j++) {
          d = ref[j];
          data.push({
            x: d.x,
            y: d.y
          });
        }
        for (k = 0, len1 = data_changes.length; k < len1; k++) {
          [i, d] = data_changes[k];
          if (data.length <= i) {
            Plotly.addTraces(dv, d);
            data.push(d);
          } else {
            data[i] = d;
          }
        }
      }
      layout = {};
      if (newXrange != null) {
        layout.xaxis = {
          range: newXrange
        };
      }
      if (newYrange != null) {
        layout.yaxis = {
          range: newYrange
        };
      }
      if (newAnnotations != null) {
        layout.annotations = newAnnotations;
      }
      if ((data_changes == null) || (data_changes.length === 0)) {
        update = {
          layout: layout
        };
      } else if ((newXrange == null) && (newYrange == null) && (newAnnotations == null)) {
        update = {
          data: data
        };
      } else {
        update = {
          data: data,
          layout: layout
        };
      }
      log('calling actual animation');
      return Plotly.animate(this, update, {
        transition: {
          duration: duration,
          easing: 'linear'
        },
        frame: {
          duration: duration,
          redraw: rd
        }
      });
    }
  });
};

inc_calcs = function(ecg_plt, inc) {
  var newPointer, newStart, newStop, newXrange, newY, newYRange, pointerLine, windowRect;
  newXrange = ecg_plt._fullLayout.xaxis.range.map(function(e) {
    return e + inc;
  });
  newStart = ecg_plt._fullData[0].x.findIndex(function(e) {
    return e >= newXrange[0];
  });
  newStop = ecg_plt._fullData[0].x.findIndex(function(e) {
    return e >= newXrange[1];
  });
  newY = ecg_plt._fullData[0].y.slice(newStart, newStop);
  newYRange = autoYRange(newY);
  windowRect = {
    x: [newXrange[1], newXrange[1], newXrange[0], newXrange[0]],
    y: [4000, 0, 0, 4000]
  };
  newPointer = ((newXrange[1] - newXrange[0]) / 2.0) + newXrange[0];
  pointerLine = {
    x: [newPointer, newPointer],
    y: [-1, 1]
  };
  return [newXrange, newYRange, newPointer, pointerLine, windowRect, newStart, newStop];
};

//# sourceMappingURL=mplotly.js.map
