{
  "version": 3,
  "file": "signal_manscan.js",
  "sourceRoot": "../../../hep",
  "sources": [
    "../mlib/mlib/web/signal_manscan.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "appendToBody(E.P('hola from signal_manscan.coffee'))\n\necg_plt = () -> plot_map[Object.keys(plot_map).find((e)->e.includes('ECG'))]\nibi_plt = () -> plot_map[Object.keys(plot_map).find((e)->e.includes('IBI'))]\n\npendingUpdate = null\nrequestedUpdate = false\n\npointerArrow = () ->\n    x        : 0.5\n    y        : 0.5\n    yanchor  : 'middle'\n    ax       : 0\n    ay       : -200\n    axref    : 'paper'\n    xref     : 'paper'\n    yref     : 'paper'\n    text     : 'pointer'\n    showarrow: true\n    arrowhead: 1\n\nws = openSocketClient({\n    url      : \"ws://localhost:9998\"\n    onopen   : () ->\n        @.send(\"GET_ALL\")\n        log(\"Message is sent...\")\n    onmessage: (evt) ->\n        log(\"Message is received... (#{evt.data.shorten(50)})\")\n        if evt.data.startsWith('TEXT')\n            appendToBody(E.Pre(evt.data.afterFirst(':')))\n        else if evt.data.startsWith('HTML') or evt.data.startsWith('PLOT')\n            div = E.Div(evt.data.afterFirst(':'))\n            appendToBody(div)\n            arr = div.getElementsByTagName('script')\n            for a in arr\n                eval(a.innerHTML) # run script inside div\n            if evt.data.startsWith('PLOT') #after ran script\n                dv = div.children[0].children[0]\n                dv = mplotly(dv)\n                plot_map[dv._fullLayout.title.text] = dv\n                if dv == ecg_plt()\n                    dv.def {\n                        x: () -> @._fullData[0].x\n                        y: () -> @._fullData[0].y\n                    }\n                    Plotly.relayout(ecg_plt(), {\n                        'annotations': [pointerArrow()]\n                    })\n        else if evt.data.startsWith('UPDATE')\n            requestedUpdate = false\n            u = JSON.parse(evt.data.afterFirst(':'))\n            if u?\n                pendingUpdate = u\n        else\n            appendToBody(E.Div(evt.data))\n    onclose  : ->\n        alert(\"Connection is closed...\")\n})\npointer = 0\npointerL = null\nstopShifting = false\nisShifting = false\n\nincrement = 1 / 100\n\nkeydown (e) ->\n    if e.keyCode == SPACE_BAR.keyCode\n        1 + 1\n    else if [LEFT_ARROW.keyCode, RIGHT_ARROW.keyCode].includes(e.keyCode)\n        if not isShifting\n            retic()\n            log('finished retic')\n            inc = 1\n            if e.keyCode == LEFT_ARROW.keyCode\n                inc = -1\n            stopShifting = false\n            shift(inc)\n    else if [UP_ARROW.keyCode, DOWN_ARROW.keyCode].includes(e.keyCode)\n        if e.keyCode == UP_ARROW.keyCode\n            increment *= 10\n        else\n            increment /= 10\nkeyup (e) ->\n    if [LEFT_ARROW.keyCode, RIGHT_ARROW.keyCode].includes(e.keyCode)\n        stopShifting = true\n\n\n\nDUR = 10\nRELOAD_THRESH = 0.25\n\n\n\nshift = (pos) ->\n    log('top of shift()')\n    isShifting = true\n    inc = increment * pos\n    log('about to call inc_calcs')\n    [newXrange, newYRange, newPointer, pointerLine, windowRect, newStart, newStop] = inc_calcs(ecg_plt(), inc)\n    log('finished inc_calcs')\n    pointer = newPointer\n    pointerL = pointerLine\n    checkUp = ->\n        log('in checkUp')\n        if stopShifting\n            arrow = pointerArrow()\n            arrow.yref = 'y'\n            y = ecg_plt().y().slice(newStart, newStop)\n            arrow.y = y[Math.round(y.length / 2)]\n            #            ecg_plt().animate(\n            ##                data_changes: [[2, pointerLine]]\n            #                newAnnotations: [arrow]\n            #                dur         : 10\n            #            )\n            Plotly.relayout(ecg_plt(), {\n                'annotations': [arrow]\n            })\n            isShifting = false\n    log('starting main shift')\n    ecg_plt().animate(\n#        data_changes: [[2, pointerLine]] #maybe\n        newXrange: newXrange\n#                    newYRange: newYRange\\\n        dur      : DUR\n        redraw   : false\n    ).then((v)->\n        log('finished main shift, checking if should update')\n        x = ecg_plt().x()\n        x0 = x[0]\n        xEnd = x.slice(-1)[0]\n        dif = xEnd - x0\n        if !pendingUpdate? and (not requestedUpdate) and (pointer > x0 + (dif * (.5 + RELOAD_THRESH)) or pointer < x0 + (dif * (.5 - RELOAD_THRESH)))\n            ws.send(\"GET_UPDATE:#{pointer}\")\n            requestedUpdate = true\n        #            1+1\n        log('finished checking if should update')\n    ).then((v)->\n        log('in next then (why another?)')\n        if pendingUpdate?\n#            ibi_plt has nothing to do with pending update. Its just that it doesnt need to update that often, so this is a way to save resources and its roughly the update frequency that I want\n            ibi_plt().animate\n                data_changes: [[1, windowRect]]\n            ecg_plt().animate(\n                data_changes: [\n                    [0, pendingUpdate[0]],\n                    [1, pendingUpdate[1]]\n                ]\n                dur         : 1\n            ).then((v)->\n                pendingUpdate = null\n            )\n    ).then((v) ->\n        log('in final then')\n        checkUp()\n        if not stopShifting\n            shift(pos)\n    ).catch(checkUp)\n    log('bottom of shift')"
  ]
}