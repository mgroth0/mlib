{
  "version": 3,
  "file": "mplotly.js",
  "sourceRoot": "../../../hep",
  "sources": [
    "../mlib/mlib/web/mplotly.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "plot_map = {}\n\nmplotly = (dv) ->\n    dv.def {\n        animate: ({\n            data_changes\n            newXrange,\n            newYrange,\n            newAnnotations,\n            dur,\n            redraw\n        }) ->\n            log('setting up animation')\n            duration = 500\n\n            if dur?\n                duration = dur\n\n            rd = true\n            if redraw?\n                rd = redraw\n\n            if data_changes? and (data_changes.length > 0)?\n                data = []\n                for d in @._fullData\n                    data.push({x: d.x, y: d.y})\n                for [i, d] in data_changes\n                    if data.length <= i\n                        Plotly.addTraces(dv, d)\n                        data.push(d)\n                    else\n                        data[i] = d\n\n            layout = {}\n            if newXrange?\n                layout.xaxis = {range: newXrange}\n            if newYrange?\n                layout.yaxis = {range: newYrange}\n            if newAnnotations?\n                layout.annotations = newAnnotations\n\n            if !data_changes? or (data_changes.length == 0)\n                update = {layout: layout}\n            else if (not newXrange?) and (not newYrange?) and (not newAnnotations?)\n                update = {data: data}\n            else\n                update = {data  : data, layout: layout}\n            log('calling actual animation')\n            Plotly.animate(@, update, {\n                transition:\n                    duration: duration\n                    easing  : 'linear'\n                frame:\n                    duration: duration\n                    redraw: rd\n            })\n    }\n\ninc_calcs =  (ecg_plt, inc) ->\n    newXrange = ecg_plt._fullLayout.xaxis.range.map(\n        (e) -> e + inc\n    )\n    newStart = ecg_plt._fullData[0].x.findIndex((e) -> e >= newXrange[0])\n    newStop = ecg_plt._fullData[0].x.findIndex((e) -> e >= newXrange[1])\n    newY = ecg_plt._fullData[0].y.slice(newStart, newStop)\n    newYRange = autoYRange(newY)\n\n    windowRect = {\n        x: [newXrange[1], newXrange[1], newXrange[0], newXrange[0]]\n        y: [4000, 0, 0, 4000]\n    }\n\n    newPointer = ((newXrange[1] - newXrange[0]) / 2.0) + newXrange[0]\n    pointerLine = {\n        x: [newPointer, newPointer],\n        y: [-1, 1]\n    }\n    return [newXrange, newYRange, newPointer, pointerLine,windowRect,newStart,newStop]\n"
  ]
}